---
apiVersion: storage.k8s.io/v1
kind: CSIDriver
metadata:
  name: my-csi-driver
spec:
  attachRequired: false
  podInfoOnMount: true
  fsGroupPolicy: File
  storageCapacity: false
  volumeLifecycleModes:
    - Persistent
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-csi-driver-sa
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: my-csi-driver-role
rules:
  - apiGroups: [""]
    resources: ["nodes", "pods", "persistentvolumes", "persistentvolumeclaims", "events"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["csinodes", "volumeattachments", "storageclasses", "csistoragecapacities"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshots", "volumesnapshotcontents", "volumesnapshotclasses"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: my-csi-driver-binding
subjects:
  - kind: ServiceAccount
    name: my-csi-driver-sa
    namespace: default
roleRef:
  kind: ClusterRole
  name: my-csi-driver-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: my-csi-driver
spec:
  selector:
    matchLabels:
      app: my-csi-driver
  template:
    metadata:
      labels:
        app: my-csi-driver
    spec:
      serviceAccountName: my-csi-driver-sa
      containers:
        - name: my-csi-driver
          image: ghcr.io/ktsakalozos/my-csi-driver:latest
          args:
            - "--endpoint=unix:///var/lib/kubelet/plugins/my-csi-driver/csi.sock"
          securityContext:
            privileged: true
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/kubelet/plugins/my-csi-driver
            - name: mountpoint-dir
              mountPath: /var/lib/kubelet
              mountPropagation: Bidirectional
            - name: data-dir
              mountPath: /var/lib/my-csi-driver
            - name: device
              mountPath: /dev

        - name: node-driver-registrar
          image: registry.k8s.io/sig-storage/csi-node-driver-registrar:v2.10.1
          args:
            - --csi-address=$(ADDRESS)
            - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
            - --health-port=9809
          env:
            - name: ADDRESS
              value: /var/lib/kubelet/plugins/my-csi-driver/csi.sock
            - name: DRIVER_REG_SOCK_PATH
              value: /var/lib/kubelet/plugins/my-csi-driver/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/kubelet/plugins/my-csi-driver
            - name: registration-dir
              mountPath: /registration
          livenessProbe:
            httpGet:
              path: /healthz
              port: 9809
            initialDelaySeconds: 5
            timeoutSeconds: 5
        - name: external-provisioner
          image: registry.k8s.io/sig-storage/csi-provisioner:v5.0.1
          args:
            - --csi-address=$(ADDRESS)
            - --feature-gates=Topology=true
            - --strict-topology
            - --immediate-topology=false
            - --timeout=120s
            - --enable-capacity=true
            - --capacity-ownerref-level=1
            - --node-deployment=true
          env:
            - name: ADDRESS
              value: /var/lib/kubelet/plugins/my-csi-driver/csi.sock
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/kubelet/plugins/my-csi-driver
      volumes:
        - name: socket-dir
          hostPath:
            path: /var/lib/kubelet/plugins/my-csi-driver
            type: DirectoryOrCreate
        - name: mountpoint-dir
          hostPath:
            path: /var/lib/kubelet
            type: DirectoryOrCreate
        - name: data-dir
          hostPath:
            path: /var/lib/my-csi-driver
            type: DirectoryOrCreate
        - name: device
          hostPath:
            path: /dev
            type: Directory
        - name: registration-dir
          hostPath:
            path: /var/lib/kubelet/plugins_registry
            type: Directory
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: my-csi-driver-default
  annotations:
    storageclass.kubernetes.io/is-default-class: "true"
provisioner: my-csi-driver
reclaimPolicy: Delete
volumeBindingMode: WaitForFirstConsumer
allowVolumeExpansion: true
